class Solution {
    public String decodeString(String s) {
        Stack<Character> stack = new Stack<>();
        for(char ch : s.toCharArray()){
            if(ch == ']'){
                StringBuilder sb = new StringBuilder();
                while(!stack.isEmpty() && !Character.isDigit(stack.peek())){
                    if(!stack.peek().equals('[')){
                       sb.append(stack.pop()); 
                    }else{
                        stack.pop();
                    }
                }
                StringBuilder cnt = new StringBuilder();
                while(!stack.isEmpty() && Character.isDigit(stack.peek())){
                    cnt.insert(0, stack.pop());
                }
                String snt = cnt.toString();
                int count = 0;
                for(int k = 0; k < snt.length(); k++){
                    count = count*10+(Character.getNumericValue(snt.charAt(k)));
                }
                    for(int i = 0 ; i < count; i++){
                        String st = sb.toString();
                        for(int j = st.length()-1; j>= 0; j--){
                            System.out.println(st.charAt(j));
                            stack.push(st.charAt(j));
                        }
                    }
            }else{
                stack.push(ch);
            }
        }
        StringBuilder sbNew = new StringBuilder();
        while(!stack.isEmpty()){
            sbNew.insert(0, stack.pop());
        }
        return sbNew.toString();
    }
}
